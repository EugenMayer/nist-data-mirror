{{/*
# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
*/}}
{{ $uuid := uuidv4 }} {{/* force uniqueness for every execution of helm */}}
---

kind: Deployment
apiVersion: apps/v1beta2
metadata:
  # This uses a "fullname" template (see _helpers)
  # Basing names on .Release.Name means that the same chart can be installed
  # multiple times into the same namespace.
  name: {{ template "nist-data-mirror.fullname" . }}
  labels:
    heritage: {{ .Release.Service | trunc 63 | quote }}
    release: {{ .Release.Name | trunc 63 |  quote }}
    chart: {{ printf "%s-%s" .Chart.Name .Chart.Version | trunc 63 | quote }}
    revision: {{ .Release.Revision | quote }}
    appVersion: {{ .Chart.AppVersion | trunc 63 | quote }}
    k8s-app: {{ .Chart.Name }}
    kubernetes.io/cluster-service: "true"
    uuid: {{ $uuid | quote }}
  namespace: {{ default "default" .Values.nist.namespace }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        k8s-app: {{ .Chart.Name }}
    spec:
{{- if .Values.nist.image.pullSecret }}             
      imagePullSecrets:   
      - name: {{ .Values.nist.image.pullSecret }}
{{- end }}      
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.nist.image.url }}:{{ default "LATEST" .Values.nist.image.tag }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ default "8080" .Values.nist.service.port }}
          protocol: TCP
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: /
            port: 80
          initialDelaySeconds: 360
          timeoutSeconds: 360
